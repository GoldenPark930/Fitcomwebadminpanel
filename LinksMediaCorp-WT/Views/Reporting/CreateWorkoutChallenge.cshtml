@model LinksMediaCorpEntity.AdminChallenge
<script src="~/Scripts/ckeditor/ckeditor.js"></script>
@using MvcCheckBoxList.Model
@using LinksMediaCorpUtility.Resources
@Scripts.Render("~/bundles/ui")
@Scripts.Render("~/Content/stylesheet")
@Styles.Render("~/Content/challenge")
@Scripts.Render("~/bundles/Workout")
@{
    Layout = "~/Views/Shared/_FitComLayout.cshtml";
    ViewBag.Title = "CreateWorkoutChallenge";
    
    List<LinksMediaCorpEntity.ChallengeTypes> lstChallangeSubType = new List<LinksMediaCorpEntity.ChallengeTypes>();
    if (ViewBag.ChallengeTypeSubList != null)
    {
        lstChallangeSubType = ViewBag.ChallengeTypeSubList;
    }
    List<LinksMediaCorpEntity.ViewTrainers> lstTrainers = new List<LinksMediaCorpEntity.ViewTrainers>();
    if (ViewBag.TrainerList != null)
    {
        lstTrainers = ViewBag.TrainerList;
    }
    List<LinksMediaCorpEntity.ExerciseType> lstExerciseType = new List<LinksMediaCorpEntity.ExerciseType>();
    if (ViewBag.ExerciseTypeList != null)
    {
        lstExerciseType = ViewBag.ExerciseTypeList;
    }
    /*Code for radio button list of target training Zone*/
    List<LinksMediaCorpEntity.BodyPart> lstBodyPart = new List<LinksMediaCorpEntity.BodyPart>();
    if (ViewBag.ListBodyPartList != null)
    {
        lstBodyPart = ViewBag.ListBodyPartList;
    }
    /*Code for radio button list of Equipment*/
    List<LinksMediaCorpEntity.Equipments> lstEquipment = new List<LinksMediaCorpEntity.Equipments>();
    if (ViewBag.ListEquipment != null)
    {
        lstEquipment = ViewBag.ListEquipment;
    }
    /*Code for radio button list of Equipment*/
    List<LinksMediaCorpEntity.Difficulties> lstDifficulty = new List<LinksMediaCorpEntity.Difficulties>();
    if (ViewBag.ListDifficulty != null)
    {
        lstDifficulty = ViewBag.ListDifficulty;
    }
    var selectedChallengeTypeId = 0;
    if (Model != null && Model.SelectedChallengeTypeId != 0)
    {
        selectedChallengeTypeId = Model.SelectedChallengeTypeId;
    }
    <script type="text/javascript">
        $('#Home_li').removeClass("active");
        $('#Reporing_li').removeClass('active');
        $('#chalenges_submenu').removeClass("inner-menu");
        $('#activities_submenu').removeClass('inner-menu');
        $('#trainers_submenu').removeClass("inner-menu");
        $('#users_submenu').removeClass('inner-menu');
        $('#teams_submenu').removeClass("inner-menu");
        $('#Reporing_li').addClass('active');

    </script>
    if (!Convert.ToString(@Session[LinksMediaCorpUtility.Resources.Message.PreviousUrl]).Equals(LinksMediaCorpUtility.Resources.Message.MainUrlText))
    {
        <script type="text/javascript">
            $('#workouts_submenu').addClass("inner-menu");
        </script>
    }
}
<!-- start page-wrapper -->
@using (Html.BeginForm("CreateWorkoutChallenge", "Reporting", FormMethod.Post, new { id = "myform", enctype = "multipart/form-data" }))
{
    <div id="page-wrapper">
        <!-- Start hidden field Section -->
        @Html.HiddenFor(m => m.VariableLimit)
        @Html.HiddenFor(m => m.IsMoreThenOne)
        @Html.HiddenFor(m => m.VariableUnit)
        @Html.HiddenFor(m => m.ResultUnitType)
        @Html.HiddenFor(m => m.FreeFormExerciseNameDescriptionList)
        @Html.HiddenFor(m => m.FFExeVideoUrl1)
        @Html.HiddenFor(m => m.SelectedAllIndex)
        @Html.HiddenFor(m => m.FFExeDesc1)
        @Html.HiddenFor(m => m.ExerciseId1)        
        @Html.HiddenFor(model => model.SelectedTargetZoneCheck)
        @Html.HiddenFor(model => model.SelectedEquipmentCheck)
        @Html.HiddenFor(model => model.SelectedChallengeCategoryCheck)
        <!-- End hidden field Section -->
        <!-- start create-challenge -->
        <div class="create-challenge">
            <h3>
                Create a New Workout
                <div class="header-link-btn">
                    <input name="" id="btnTopAdminChallengeSubmit" type="button" value="Submit" class="submit" />
                    @if (Convert.ToString(@Session[LinksMediaCorpUtility.Resources.Message.PreviousUrl]).Equals(LinksMediaCorpUtility.Resources.Message.MainUrlText))
                    {
                        @Html.ActionLink("Cancel", "Main", "Reporting", new { }, new { @class = "submit" })
                    }
                    else
                    {
                        @Html.ActionLink("Cancel", "Workouts", "Reporting", new { }, new { @class = "submit" })
                    }
                </div>
            </h3>
            <!-- start challenge-content -->
            <div class="challenge-content">
                <!-- start step -->
                <div class="step">
                    <h5>Step 1 - Select Workout Type: </h5>
                    <!-- start step-des --> 
                    <div class="step-des">
                        @Html.DropDownListFor(m => m.ChallengeSubTypeId, new SelectList(lstChallangeSubType, "ChallengeSubTypeId", "ChallengeSubType"), "--Choose Workouts Type--", new { @class = "select" })
                        <span id='loadingChallengeSubType' style='display:none;'>
                            <img src='~/images/ajax-loader.gif' />
                        </span>
                        <div class="clearfix"></div>
                        @Html.ValidationMessageFor(m => m.ChallengeSubTypeId, "", new { id = "spnChallengeSubTypeId", @class = "error-msg pad0" })
                    </div>
                    <!-- end step-des -->
                </div>
                <div class="step" id="divChallengeCategorySection">
                    <h5 id="FFchallegeCategoryHeader">Step 2 - Select Your Category: </h5>
                    <!-- start step-des -->
                    <div class="col-xs-12 col-md-12 col-lg-12 mob-view-box">
                        <div style="overflow-x:auto; overflow-y:hidden;">
                            <fieldset class="txt-specialisation-detail margin-top" style="width: 1018px;">
                                <div style="color:red;"> @Html.ValidationMessageFor(m => m.SelectedChallengeCategoryCheck, "", new { })</div>
                                <div id="chkAllChallengeCategory">
                                    @{
                                        var primaryChallengeCategoryListInfo = new HtmlListInfo(HtmlTag.table, 5, null, TextLayout.Default, TemplateIsUsed.No);
                                        @Html.CheckBoxListFor(m => m.PostedChallengeCategory.ChallengeCategoryId, m => m.AvailableChallengeCategory,
m => m.ChallengeCategoryId, m => m.ChallengeCategoryName, m => m.SelecetdChallengeCategory, primaryChallengeCategoryListInfo)
                                    }
                                </div>
                            </fieldset>
                        </div>
                    </div>
                    <!-- end step-des -->
                </div>

                <!-- end step -->
                <!-- start step -->
                <div class="step" id="CreateChangeDifficultyLevel">
                    <h5 id="challegeDifficultyHeader">Step 2 - Select Difficulty Level:</h5>
                    <!-- start step-des -->
                    <div class="step-des">

                        @{
                            int i = 0;
                            foreach (var item in lstDifficulty)
                            {
                                <div class="seq-input-lbl">
                                    @if (i == 0)
                                    {
                                        @Html.RadioButtonFor(m => m.DifficultyLevel, item.Difficulty, new { @class = "radio", @checked = true })
                                        i = i + 1;
                                    }
                                    else
                                    {
                                        @Html.RadioButtonFor(m => m.DifficultyLevel, item.Difficulty, new { @class = "radio" })
                                    }
                                    @Html.LabelFor(m => m.DifficultyLevel, item.Difficulty, new { @class = "label" })
                                </div>
                            }
                        }

                    </div>
                    <!-- end step-des -->
                </div>
                <!-- end step -->
                <!-- start step -->
                <div id="FreeFormChallegeDescriptionHeaderSection" class="step">
                    <h5 id="ChallegeDescriptionHeader">Step 3 - Describe Your Challenge:</h5>
                    <!-- start step-des -->
                    <div class="row txt-lbl-input">
                        <div class="col-md-12 col-lg-12 col-xs-12 mob-view-box">
                            <div class="clr-both"></div>
                            <div class="col-md-12 col-lg-12 col-xs-12"></div>
                            <div class="col-md-6 col-lg-6 col-xs-6 remove-margin-left">  @Html.ValidationMessageFor(m => m.Description, "", new { id = "spnDescribechallenge", @class = "error-msg" })</div>
                        </div>
                        <div class="col-md-12 col-lg-12 col-xs-12 mob-view-box">
                            @Html.TextAreaFor(m => m.Description, new { @class = "ckeditor", maxLength = "1000", placeholder = "Max Char limit 1000" })
                        </div>
                    </div>

                    <!-- end step-des -->
                </div>
                <div id="FreeFormChallegeDetailsSection" class="step">
                    <h5 id="FFChallegeDetailsHeader">Step 4 - Challenge Details:</h5>
                    <!-- start step-des -->
                    <div class="row txt-lbl-input">
                        <div class="col-md-12 col-lg-12 col-xs-12 mob-view-box">
                            <div class="clr-both"></div>
                            <div class="col-md-12 col-lg-12 col-xs-12"></div>
                            <div class="col-md-6 col-lg-6 col-xs-6 remove-margin-left">  @Html.ValidationMessageFor(m => m.ChallengeDetail, "", new { id = "spnChallengeDetails", @class = "error-msg" })</div>
                        </div>
                        <div class="col-md-12 col-lg-12 col-xs-12 mob-view-box">
                            @Html.TextAreaFor(m => m.ChallengeDetail, new { @class = "ckeditor", maxLength = "1000", placeholder = "Max Char limit 1000" })
                        </div>
                    </div>

                    <!-- end step-des -->
                </div>
                <div class="step" id="FreeFormChallegeDurationSection">
                    <h5 id="ChallegeDurationHeader">Step 5 - How long is Workout:</h5>
                    <!-- start step-des -->
                    <div class="step-des">
                        <div class="row-colum">
                            @Html.TextBoxFor(m => m.FFChallengeDuration, null, new { @class = "input", maxLength = "25" })
                            @Html.ValidationMessageFor(m => m.FFChallengeDuration, "", new { @class = "error-msg none error-btm" })
                        </div>
                    </div>
                    <!-- end step-des -->
                </div>
                <!-- end step -->
                <!-- start step -->                
                <div class="step" id="FreeFormChallengeExeciseSection">
                    <h5 id="AdminFreefromExeciseSection">Step 5 - Choose Exercise(s):</h5>
                    <!-- start step-des -->
                    <div class="step-des">
                        <br />
                        <div>
                            <div class="rmv-pd col-md-4 col-sm-12 col-xs-12 exer-sec">
                                <label class="pull-left" style="width: auto; margin-right: 5px; padding: 5px 1%;">Equipments:</label>
                                @*<select id="chkFreeFormSearchEquipment" multiple="multiple" title="Equipment" style="width:180px;"></select>*@
                                @Html.DropDownListFor(m => m.SelectedEquipment1, new SelectList(lstEquipment, "EquipmentId", "Equipment"), "--Choose Equipments--", new { id = "FFdrpdownEquipments1", @class = "select" })
                            </div>
                            <div class="rmv-pd col-md-4 col-sm-12 col-xs-12 exer-sec">
                                <label class="pull-left" style="width: auto; margin-right: 5px; padding: 5px 1%;">Training Zones:</label>
                                @*<select id="chkFreeFormTrainingZone" multiple="multiple" title="Training Zone" style="width:180px;"></select>*@
                                @Html.DropDownListFor(m => m.SelectedTrainingZone1, new SelectList(lstBodyPart, "PartId", "PartName"), "--Choose Training Zones--", new { id = "FFdrpdownTrainingZones1", @class = "select" })
                            </div>
                            <div class="rmv-pd col-md-4 col-sm-12 col-xs-12 exer-sec">
                                <label class="pull-left" style="width: auto; margin-right: 5px; padding: 5px 1%;">Exercise Types:</label>
                                @*<select id="chkFreeFormSearchExerciseType" multiple="multiple" title="Exercise Type" style="width:180px;"></select>*@
                                @Html.DropDownListFor(m => m.SelectedExeciseType1, new SelectList(lstExerciseType, "ExerciseTypeId", "ExerciseName"), "--Choose Exercise Types--", new { id = "FFdrpdownExerciseTypes1", @class = "select" })
                            </div>
                        </div>
                        <div>
                            <div class="row-colum add-step">
                                <label>Name of Exercise 1:</label>
                                @Html.TextBoxFor(m => m.FFExeName1, null, new { @class = "freeforminput FreeFormExerciseVideos1 col-md-10 col-sm-10 col-xs-10" })
                                <div class="row-colum col-md-12 col-sm-12 col-xs-12">
                                    <label style="line-height:20px;">&nbsp;</label>
                                    <span id="FFExeVideoLink1" class="rmv-pd col-md-10 col-sm-10 col-xs-10">
                                        <a id="ffexevideolinkurl1" href=@Html.DisplayFor(m => m.FFExeVideoUrl1) target="_blank">
                                            @Html.DisplayFor(m => m.FFExeVideoLink1)
                                        </a>
                                    </span>
                                    <span id="lblExe1" class="error-msg secondary-err-msg"></span>
                                    @Html.ValidationMessageFor(m => m.FFExeName1, "", new { id = "spnFFExeName1", @class = "error-msg" })
                                </div>
                                <div class="row-colum col-md-12 col-sm-12 col-xs-12">
                                    <label><span class="active-new-chckbox pull-left">Alternate Name:</span> @Html.CheckBoxFor(m => m.IsFFAExeName1, new { @class = "checkbox-btn" })</label>
                                    @Html.TextBoxFor(m => m.FFAExeName1, null, new { @class = "freeforminput col-md-10 col-sm-10 col-xs-10" })
                                    @Html.ValidationMessageFor(m => m.FFAExeName1, "", new { id = "spnFFAExeName1", @class = "error-msg" })
                                </div>
                                <div class="row-colum col-md-12 col-sm-12 col-xs-12">
                                    <label><span class="active-new-chckbox pull-left">Set As First Exercise:</span>@Html.CheckBoxFor(m => m.IsSetFirstExecise, new { id = "IsSetFirstExecise1", @class = "checkbox-btn" })</label>

                                </div>
                            </div>
                            <div class="row-colum">
                                <div id="execeMainsetId1" class="Main-set main-bg-set">
                                    <div id=1>
                                        <div class="set-heading">
                                            <span id="exesetTittle1"> Set 1</span>
                                        </div><label>How Many Reps:</label>
                                        <input class="freeforminput FreeFormExerciseVideos1 col-md-10 col-sm-10 col-xs-10 ui-autocomplete-input ui-corner-all" id="ExecSetRep1" name="ExecSetRep1" type="text" value="" autocomplete="off">
                                        <div class="or-section"><span>OR</span></div><label>How Much Time:</label>
                                        <label style="width:47px;margin-right:2px;" class="lbl-txt">Hour(s)</label>
                                        <input class="input " data-val="true" data-val-range="Please enter valid Hour(s)." data-val-range-max="24" data-val-range-min="0" id="SetTimeHours1" maxlength="2" name="SetTimeHours1" style="width:60px;padding:5px;margin-right:5px;text-align:center;height:32px;" type="text" value="00">
                                        <label style="width:55px;margin-right:5px;" class="lbl-txt">Minute(s)</label>
                                        <input class="input" data-val="true" data-val-range="Please enter valid Minute(s)." data-val-range-max="60" data-val-range-min="0" id="SetTimeMinute1" maxlength="2" name="SetTimeMinute1" style="width:60px;padding:5px;margin-right:5px;text-align:center;height:32px;" type="text" value="00">
                                        <label style="width:58px;margin-right:5px;" class="lbl-txt">Second(s)</label>
                                        <input class="input " data-val="true" data-val-range="Please enter valid Second(s)." data-val-range-max="60" data-val-range-min="0" id="SetTimeSecond1" maxlength="2" name="SetTimeSecond1" style="width:60px;padding:5px;margin-right:5px;text-align:center;height:32px;" type="text" value="00">
                                        <label style="width:30px;margin-right:5px;" class="lbl-txt">HS(s)</label>
                                        <input class="input" data-val="true" data-val-range="Please enter valid HS(s)." data-val-range-max="99" data-val-range-min="0" id="SetTimeHS1" maxlength="2" name="SetTimeHS1" style="width:60px;padding:5px;margin-right:5px;text-align:center;height:32px;height:32px;" type="text" value="00">
                                        <span class="active-new-chckbox pull-left" style="line-height:31px;">Auto Count Down:</span>

                                        <div class="gender-option-pd">
                                            <input id="IsSetAutoCountDown1" name="IsSetAutoCountDown1" type="checkbox" checked="checked" class="IsChangedExeciseName checkbox-autcountbtn" />
                                        </div>
                                        <div class="clr-both">
                                        </div>
                                        <label>Description:</label><textarea class="freeformtextarea col-md-10 col-sm-10 col-xs-9" cols="20" id="ExecSetDescription1" maxlength="500" name="ExecSetDescription1" placeholder="Max Char limit 500" rows="2"></textarea>
                                        <div class="clr-both">
                                        </div>
                                        <label>How Much Rest Time:</label><label style="width:47px;margin-right:2px;" class="lbl-txt">Hour(s)</label>
                                        <input class="input" data-val="true" data-val-range="Please enter valid Hour(s)." data-val-range-max="24" data-val-range-min="0" id="RestTimeHours1" maxlength="2" name="RestTimeHours1" style="width:60px;padding:5px;margin-right:5px;text-align:center;height:32px;" type="text" value="00">
                                        <label style="width:55px;margin-right:5px;" class="lbl-txt">Minute(s)</label>
                                        <input class="input " data-val="true" data-val-range="Please enter valid Minute(s)." data-val-range-max="60" data-val-range-min="0" id="RestTimeMinute1" maxlength="2" name="RestTimeMinute1" style="width:60px;padding:5px;margin-right:5px;text-align:center;height:32px;" type="text" value="00">
                                        <label style="width:58px;margin-right:5px;" class="lbl-txt">Second(s)</label>
                                        <input class="input " data-val="true" data-val-range="Please enter valid Second(s)." data-val-range-max="60" data-val-range-min="0" id="RestTimeSecond1" maxlength="2" name="RestTimeSecond1" style="width:60px;padding:5px;margin-right:5px;text-align:center;height:32px;" type="text" value="00">
                                        <label style="width:30px;margin-right:5px;" class="lbl-txt">HS(s)</label>
                                        <input class="input" data-val="true" data-val-range="Please enter valid HS(s)." data-val-range-max="99" data-val-range-min="0" id="RestTimeHS1" maxlength="2" name="RestTimeHS1" style="width:60px;padding:5px;margin-right:5px;text-align:center;height:32px;" type="text" value="00">
                                        <input type="hidden" id="IsNewAddedSet1" value="1">
                                        <div class="clr-both"></div>
                                    </div>
                                </div>

                                <div class="add-set">
                                    <button id="btnAddExeciseSet1" class="add_set_button marginBot10">Add Set</button>
                                </div>
                                <div class="clr-both"></div>
                                <div class="btn-add-new">
                                    <button id="InsertExecise1" class="add_field_button add-exercise">Add Exercise</button>
                                </div>
                            </div>
                            <div class="clr-both chose-ex-parts"></div>
                            <input type="hidden" id="ExerciseSetCount1" value="1">
                            <input type="hidden" id="IsNewAddedExercise1" value="1">
                            <input type="hidden" id="CEARocordId1" value="0">
                            <div id="freeformtoggalediv">

                            </div>

                        </div>
                        <!-- end step-des -->
                    </div>
                </div>
                <!-- end step -->           
               
             

              
                <!-- start step -->

                <div class="step" id="CreateChallenegeEquipmentRequirement">
                    <h5 id="ChallenegeEquipmentRequirementHeader">Step 5 - Select Equipment Requirements:</h5>
                    <!-- start step-des -->
                    <div class="col-xs-12 col-md-12 col-lg-12 mob-view-box">
                        <div style="overflow-x:auto; overflow-y:hidden;">
                            <fieldset class="txt-specialisation-detail margin-top" style="width: 99%;">
                                @*<legend style="width:210px;">Primary (Top Three)</legend>*@
                                <div id="detailsEquipmentchk1">
                                    <div style="color:red;"> @Html.ValidationMessageFor(m => m.SelectedEquipmentCheck, "", new { })</div>
                                    @{
                                        var equipmentListInfo = new HtmlListInfo(HtmlTag.table, 4, null, TextLayout.Default, TemplateIsUsed.No);
                                        @Html.CheckBoxListFor(m => m.PostedEquipments.SelectedEquipmentIDs, m => m.AvailableEquipments,
m => m.EquipmentId, m => m.Equipment, m => m.SelectedEquipments, equipmentListInfo)
                                    }
                                </div>
                            </fieldset>
                        </div>
                    </div>
                    <!-- end step-des -->
                </div>



                <!-- end step -->
                <!-- start step -->
                <div class="step" id="CreateChallenegeTrainingZone">
                    <h5 id="AdminStepTrainingZone">Step 6 - Select Target Training Zone:</h5>
                    <!-- start step-des -->

                    <div class="col-xs-12 col-md-12 col-lg-12 mob-view-box">
                        <div style="overflow-x:auto; overflow-y:hidden;">
                            <fieldset class="txt-specialisation-detail margin-top" style="width: 99%;">
                                @*<legend style="width:210px;">Primary (Top Three)</legend>*@
                                <div id="detailsTraiingZonechk1">
                                    <div style="color:red;"> @Html.ValidationMessageFor(m => m.SelectedTargetZoneCheck, "", new { })</div>
                                    @{
                                        var trainngzoneListInfo = new HtmlListInfo(HtmlTag.table, 4, null, TextLayout.Default, TemplateIsUsed.No);
                                        @Html.CheckBoxListFor(m => m.PostedTargetZones.SelectedTargetZoneIDs, m => m.AvailableTargetZones,
m => m.PartId, m => m.PartName, m => m.SelectedTargetZones, trainngzoneListInfo)
                                    }
                                </div>
                            </fieldset>
                        </div>
                    </div>
                    <!-- end step-des -->
                </div>

                <!-- end step -->
                <!-- start step -->
                <div class="step" id="CreateChallenegeExerciseType">
                    <h5 id="AdminStepExerciseType">Step 7 - Choose Exercise Type:</h5>
                    <div class="col-xs-12 col-md-12 col-lg-12 mob-view-box">
                        <div style="overflow-x:auto; overflow-y:hidden;">
                            <fieldset class="txt-specialisation-detail margin-top" style="width: 99%;">
                                @*<legend style="width:210px;">Primary (Top Three)</legend>*@
                                <div id="detailschk1">
                                    <div style="color:red;"> @Html.ValidationMessageFor(m => m.SelectedExerciseTypeCheck, "", new { })</div>
                                    @{
                                        var exerciseTypeListInfo = new HtmlListInfo(HtmlTag.table, 4, null, TextLayout.Default, TemplateIsUsed.No);
                                        @Html.CheckBoxListFor(m => m.PostedExerciseTypes.SelectedExerciseTypeIDs, m => m.AvailableExerciseTypes,
                                           m => m.ExerciseTypeId, m => m.ExerciseName, m => m.SelectedExerciseTypes, exerciseTypeListInfo)
                                    }
                                </div>
                            </fieldset>
                        </div>
                    </div>
                </div>
                <!-- end step -->
                <!-- start step -->
                <div class="step" id="CraeteChangeChallengeName">
                    <h5 id="AdminStepChallengeName">Step 8 - Enter Challenge Name:</h5>
                    <!-- start step-des -->
                    <div class="step-des">
                        <div class="row-colum">
                            @Html.TextBoxFor(m => m.ChallengeName, null, new { @class = "input", maxLength = "200" })
                            @Html.ValidationMessageFor(m => m.ChallengeName, "", new { id = "spnChallengeNameerror-msg", @class = "error-msg none error-btm" })
                        </div>
                    </div>
                    <!-- end step-des -->
                </div>
                <!-- end step -->
                <!-- start step -->
                <div class="step" id="challengeTrainer">
                    <h5 id="AdminStepTrainerName">Step 9 - Choose Trainer:</h5>
                    <!-- start step-des -->
                    <div class="step-des">
                        <div class="row-colum">
                            @Html.DropDownListFor(m => m.TrainerId, new SelectList(lstTrainers, "TrainerId", "TrainerName"), "No Trainer", new { @class = "select" })
                        </div>
                    </div>
                    <!-- end step-des -->
                </div>


                <div class="step" id="challengeNoTrainerTeam">
                    <h5 id="AdminStepNoTrainerTeam">Step 12 - Choose  No Trainer Workout Teams:</h5>
                    <div class="col-xs-12 col-md-12 col-lg-12 mob-view-box">
                        <div style="overflow-x:auto; overflow-y:hidden;">
                            <fieldset class="txt-specialisation-detail margin-top" style="width: 1018px;">
                                <legend style="width: 70px;font-size: 12px;">Select All: @Html.CheckBox("SelectAllTeam", true)</legend>
                                <div id="chkAllNoTrainetWorkoutTeam">
                                    @{
                                        var primaryTeamsListInfo = new HtmlListInfo(HtmlTag.table, 4, null, TextLayout.Default, TemplateIsUsed.No);
                                        @Html.CheckBoxListFor(m => m.PostedTeams.TeamsID, m => m.AvailableTeams,
m => m.TeamId, m => m.TeamName, m => m.SelecetdTeams, primaryTeamsListInfo)
                                    }
                                </div>
                            </fieldset>
                        </div>
                    </div>
                </div>

                <div class="step" id="divTrendingCategorySection">
                    <h5 id="TrendingCategoryHeader">Step 13 - Select Your Trending Category: </h5>
                    <!-- start step-des -->
                    <div class="col-xs-12 col-md-12 col-lg-12 mob-view-box">
                        <div style="overflow-x:auto; overflow-y:hidden;">
                            <fieldset class="txt-specialisation-detail margin-top" style="width: 1018px;">
                                <legend style="width: 70px;font-size: 12px;">Select All: @Html.CheckBox("SelectWorkoutAllTrendingCategory", true)</legend>
                                <div id="chkAllWorkoutTrendingCategory">
                                    @{
                                        var primaryWorkoutTrendingCategoryListInfo = new HtmlListInfo(HtmlTag.table, 4, null, TextLayout.Default, TemplateIsUsed.No);
                                        @Html.CheckBoxListFor(m => m.PostedTrendingCategory.TrendingCategoryID, m => m.AvailableTrendingCategory,
m => m.TrendingCategoryId, m => m.TrendingCategoryName, m => m.SelecetdTrendingCategory, primaryWorkoutTrendingCategoryListInfo)
                                    }
                                </div>
                                <legend>Sports Trending Category(s) </legend>
                                @{
                                    var secondaryWorkoutTrendingCategoryListInfo = new HtmlListInfo(HtmlTag.table, 4, null, TextLayout.Default, TemplateIsUsed.No);
                                    @Html.CheckBoxListFor(m => m.PostedSecondaryTrendingCategory.TrendingCategoryID, m => m.AvailableSecondaryTrendingCategory,
m => m.TrendingCategoryId, m => m.TrendingCategoryName, m => m.SelecetdSecondaryTrendingCategory, secondaryWorkoutTrendingCategoryListInfo)
                                }
                            </fieldset>
                        </div>
                    </div>
                    <!-- end step-des -->
                </div>

                <div class="step" id="divFittnessTrendingCategorySection">
                    <h5>Step 11 - Select Your Trending Category: </h5>
                    <!-- start step-des -->
                    <div class="col-xs-12 col-md-12 col-lg-12 mob-view-box">
                        <div style="overflow-x:auto; overflow-y:hidden;">
                            <fieldset class="txt-specialisation-detail margin-top" style="width: 1018px;">
                                <legend style="width: 70px;font-size: 12px;">Select All: @Html.CheckBox("SelectAllFittnestTrendingCategory", true)</legend>
                                <div id="chkAllFittnestTrendingCategory">
                                    @{
                                        var fittnessTrendingCategoryListInfo = new HtmlListInfo(HtmlTag.table, 4, null, TextLayout.Default, TemplateIsUsed.No);
                                        @Html.CheckBoxListFor(m => m.PostedTrendingCategory.TrendingCategoryID, m => m.AvailableTrendingCategory,
m => m.TrendingCategoryId, m => m.TrendingCategoryName, m => m.SelecetdTrendingCategory, fittnessTrendingCategoryListInfo)
                                    }
                                </div>
                                <legend>Sports Trending Category(s) </legend>
                                @{
                                    var secondaryfittnessTrendingCategoryListInfo = new HtmlListInfo(HtmlTag.table, 4, null, TextLayout.Default, TemplateIsUsed.No);
                                    @Html.CheckBoxListFor(m => m.PostedSecondaryTrendingCategory.TrendingCategoryID, m => m.AvailableSecondaryTrendingCategory,
m => m.TrendingCategoryId, m => m.TrendingCategoryName, m => m.SelecetdSecondaryTrendingCategory, secondaryfittnessTrendingCategoryListInfo)
                                }

                            </fieldset>
                        </div>
                    </div>
                    <!-- end step-des -->
                </div>

                <div class="clr-both"></div>
                <!-- end step -->

                <div class="clr-both"></div>
                <div class="bottom-button">
                    <input id="btnButtomAdminChallengeSubmit" name="" type="button" value="Submit" class="submit" />
                    @if (Convert.ToString(@Session[LinksMediaCorpUtility.Resources.Message.PreviousUrl]).Equals(LinksMediaCorpUtility.Resources.Message.MainUrlText))
                    {
                        @Html.ActionLink("Cancel", "Main", "Reporting", new { }, new { @class = "submit" })
                    }
                    else
                    {
                        @Html.ActionLink("Cancel", "Workouts", "Reporting", new { }, new { @class = "submit" })
                    }
                </div>
            </div>
            <!-- end challenge-content -->
        </div>
        <!-- end create-challenge -->
        <div class="clearfix"></div>
    </div>  
 }
<script src="~/Scripts/BusinessLogic/CreateAdminWorkout.js"></script>
