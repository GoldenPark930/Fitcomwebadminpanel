@model LinksMediaCorpEntity.CreateChallengeVM
<script src="~/Scripts/ckeditor/ckeditor.js"></script>
@using MvcCheckBoxList.Model
@using LinksMediaCorpUtility.Resources
@Scripts.Render("~/bundles/ui")
@Scripts.Render("~/bundles/challenge")
<link href="~/Content/css/ui-lightness/jquery-ui-1.10.4.custom.css" rel="stylesheet" />
<link href="~/Content/bootstrap-multiselect.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap-2.3.2.min.js"></script>
<script src="~/Scripts/bootstrap-multiselect.js"></script>
@{
    Layout = "~/Views/Shared/_TrainerLayout.cshtml";
    List<LinksMediaCorpEntity.ChallengeTypes> lstChallangeType = new List<LinksMediaCorpEntity.ChallengeTypes>();
    if (ViewBag.ChallengeTypeList != null)
    {
        lstChallangeType = ViewBag.ChallengeTypeList;
        lstChallangeType = lstChallangeType.GroupBy(e => new
        {
            empLoc = e.ChallengeType
        }).Select(g => g.FirstOrDefault()).ToList();
    }
    List<LinksMediaCorpEntity.ChallengeTypes> lstChallangeSubType = new List<LinksMediaCorpEntity.ChallengeTypes>();
    if (ViewBag.ChallengeTypeSubList != null)
    {
        lstChallangeSubType = ViewBag.ChallengeTypeSubList;
    }
    List<System.Web.WebPages.Html.SelectListItem> lstFractionList = new List<System.Web.WebPages.Html.SelectListItem>();

    /*Code for radio button list*/
    /*Code for radio button list of target training Zone*/
    List<LinksMediaCorpEntity.BodyPart> lstBodyPart = new List<LinksMediaCorpEntity.BodyPart>();
    if (ViewBag.ListBodyPartList != null)
    {
        lstBodyPart = ViewBag.ListBodyPartList;
    }
    /*Code for radio button list of target training Zone*/
    List<LinksMediaCorpEntity.ExerciseType> lstExerciseType = new List<LinksMediaCorpEntity.ExerciseType>();
    if (ViewBag.ExerciseTypeList != null)
    {
        lstExerciseType = ViewBag.ExerciseTypeList;
    }
    /*Code for radio button list of Equipment*/
    List<LinksMediaCorpEntity.Equipments> lstEquipment = new List<LinksMediaCorpEntity.Equipments>();
    if (ViewBag.ListEquipment != null)
    {
        lstEquipment = ViewBag.ListEquipment;
    }
    var selectedChallengeTypeId = 0;
    if (ViewBag.SelectedChallengeTypeId != null)
    {
        selectedChallengeTypeId = ViewBag.SelectedChallengeTypeId;
    }
    //List<LinksMediaCorpEntity.ChallengeCategory> lstChallangeCategory = new List<LinksMediaCorpEntity.ChallengeCategory>();
    //if (ViewBag.ChallengeCategoryList != null)
    //{
    //    lstChallangeCategory = ViewBag.ChallengeCategoryList;
}
<script type="text/javascript">
    $(document).ready(function () {
        if ($('#CheckChallengeName').val() === "NotAvailable") {
            $("#resultChallengeName").html("<span style='color:red'>Challenge Name already exists !</span>");
            $("#spnChallengeNameerror-msg").html(null);
        }
        else {
            $("#resultChallengeName").html(null);
        }

    });
</script>

}

@using (Html.BeginForm("CreateChallenge", "Reporting", FormMethod.Post, new { @class = "CreateChallengeForm", enctype = "multipart/form-data" }))
{
    <div id="page-wrapper">
        <!-- Start hidden field Section -->
        @Html.HiddenFor(m => m.VariableLimit)
        @Html.HiddenFor(m => m.ResultUnitType)
        @Html.HiddenFor(m => m.ChallengeId)
        @Html.HiddenFor(m => m.IsMoreThenOne)
        @Html.HiddenFor(m => m.VariableUnit)
        @Html.HiddenFor(m => m.FreeFormExerciseNameDescriptionList)
        @Html.HiddenFor(m => m.FormSubmitType)
        @Html.HiddenFor(m => m.FFExeVideoUrl1)
        @Html.HiddenFor(m => m.ExeIndexLink1)
        @Html.HiddenFor(m => m.ExerciseId)
        @Html.HiddenFor(m => m.ExerciseId1)
        @Html.HiddenFor(m => m.FFExeDesc1)
        @Html.HiddenFor(m => m.SelectedChallengeTypeId)
        @Html.HiddenFor(m => m.CEARocordId1)
        @Html.HiddenFor(model => model.SelectedChallengeCategoryCheck)
        <!-- End hidden field Section -->
        <!-- start create-challenge -->
        <div class="create-challenge">
            <h3>
                Create a New Challenge
                <div class="header-link-btn">
                    <input name="" type="button" id="btnTopdraft" value="Save to Draft" class="submit" />
                    <input name="" type="button" id="btnTopsubmit" value="Submit to Fitcom" class="submit" />
                    @Html.ActionLink("Cancel", "TrainerChallenges", "Reporting", new { }, new { @class = "submit" })
                </div>
            </h3>
            <!-- start challenge-content -->
            <div class="challenge-content">
                @*<h4>FAQ - How to Create a Challenge</h4>*@
                <!-- start step -->
                <div class="step">
                    <h5>Step 1 - Select Challenge Type: </h5>
                    <!-- start step-des -->
                    <div class="step-des">
                        @Html.DropDownListFor(m => m.ChallengeType, new SelectList(lstChallangeType, "ChallengeSubTypeId", "ChallengeType", ViewBag.SelectedChallengeTypeId), "--Choose Challenge Type--", new { @class = "select" })
                        <div class="clearfix"></div>
                        @Html.ValidationMessageFor(m => m.ChallengeType, "", new { @class = "error-msg pad0" })

                    </div>
                    <div class="step-des">
                        @Html.DropDownListFor(m => m.ChallengeSubTypeId, new SelectList(lstChallangeSubType, "ChallengeSubTypeId", "ChallengeSubType"), "--Choose Challenge Sub-Type--", new { @class = "select", onchange = "onChangeId();" })
                        <span id='loadingChallengeSubType' style='display:none; '>
                            <img src='~/images/ajax-loader.gif' />
                        </span>
                        <div class="clearfix"></div>
                        @Html.ValidationMessageFor(m => m.ChallengeSubTypeId, "", new { @class = "error-msg pad0" })
                    </div>
                    <!-- end step-des -->
                </div>
                <div class="step" id="divChallengeCategorySection">
                    <h5 id="FFchallegeCategoryHeader">Step 2 - Select Your Category: </h5>
                    <!-- start step-des -->

                    <div class="col-xs-12 col-md-12 col-lg-12 mob-view-box">
                        <div style="overflow-x:auto; overflow-y:hidden;">
                            <fieldset class="txt-specialisation-detail margin-top" style="width: 1018px;">
                                <div style="color:red;"> @Html.ValidationMessageFor(m => m.SelectedChallengeCategoryCheck, "", new { })</div>
                                <div id="chkAllChallengeCategory">
                                    @{
    var primaryChallengeCategoryListInfo = new HtmlListInfo(HtmlTag.table, 5, null, TextLayout.Default, TemplateIsUsed.No);
    @Html.CheckBoxListFor(m => m.PostedChallengeCategory.ChallengeCategoryId, m => m.AvailableChallengeCategory,
m => m.ChallengeCategoryId, m => m.ChallengeCategoryName, m => m.SelecetdChallengeCategory, primaryChallengeCategoryListInfo)
                                    }
                                </div>
                            </fieldset>
                        </div>
                    </div>
                    <!-- end step-des -->
                </div>
                <!-- end step -->
                <div id="FreeFormChallegeDescriptionHeaderSection" class="step" style="display:none;">
                    <h5>Step 3 - Describe Your Challenge:</h5>
                    <!-- start step-des -->
                    <div class="row txt-lbl-input">
                        <div class="col-md-12 col-lg-12 col-xs-12 mob-view-box">
                            <div class="clr-both"></div>
                            <div class="col-md-12 col-lg-12 col-xs-12"></div>
                            <div class="col-md-6 col-lg-6 col-xs-6 remove-margin-left">  @Html.ValidationMessageFor(m => m.Description, "", new { @class = "error-msg" })</div>
                        </div>
                        <div class="col-md-12 col-lg-12 col-xs-12 mob-view-box">
                            @Html.TextAreaFor(m => m.Description, new { @class = "ckeditor", maxLength = "1000", placeholder = "Max Char limit 1000" })
                        </div>
                    </div>

                    <!-- end step-des -->
                </div>
                <!-- start step -->
                <div class="step" id="FitcomChallengeExeciseSection">
                    <h5>Step 2 - Choose Exercise(s):</h5>
                    <!-- start step-des -->
                    <div class="step-des">
                        <div class="row-colum">
                            <div>
                                <label class="pull-left" style="width: auto; margin-right: 5px; margin-left: 50px; padding: 5px 1%; line-height: 25px;">Equipments:</label>
                                @*<select id="chkSearchEquipment" multiple="multiple" title="Equipment" style="width:180px;"></select>*@
                                @Html.DropDownListFor(m => m.SelectedFitcomEquipment1, new SelectList(lstEquipment, "EquipmentId", "Equipment"), "--Choose Equipments--", new { @class = "select" })

                            </div>
                            <div>
                                <label class="pull-left" style="width: auto; margin-right: 5px; margin-left: 10px; padding: 5px 1%; line-height: 25px;">Training Zones:</label>
                                @*<select id="chkTrainingZone" multiple="multiple" title="Training Zone" style="width:180px;"></select>*@
                                @Html.DropDownListFor(m => m.SelectedFitcomTrainingZone1, new SelectList(lstBodyPart, "PartId", "PartName"), "--Choose Training Zones--", new { @class = "select" })
                            </div>
                            <div>
                                <label class="pull-left" style="width: auto; margin-right: 5px; margin-left: 10px; padding: 5px 1%; line-height: 25px;">Exercise Types:</label>
                                @*<select id="chkSearchExerciseType" multiple="multiple" title="Exercise Type" style="width:180px;"></select>*@
                                @Html.DropDownListFor(m => m.SelectedFitcomExeciseType1, new SelectList(lstExerciseType, "ExerciseTypeId", "ExerciseName"), "--Choose Exercise Types--", new { @class = "select" })
                            </div>
                        </div>
                        <div class="row-colum">

                            <label>Name of Exercise 1:</label>
                            @Html.TextBoxFor(m => m.ExeName1, null, new { @class = "input" })
                            <span id="ExeVideoLink1">
                                @*@Html.DisplayFor(m => m.ExeVideoLink1)*@
                                <a href=@Html.DisplayFor(m => m.ExeVideoLink1) target="_blank">@Html.DisplayFor(m => m.ExeVideoLink1)</a>
                            </span>
                            <span id="lblExe1" class="error-msg secondary-err-msg"></span>
                            @Html.ValidationMessageFor(m => m.ExeName1, "", new { @class = "error-msg" })

                        </div>
                        <div class="row-colum">
                            <label>Description:</label>
                            @Html.TextAreaFor(m => m.ExeDesc1, new { @class = "textarea", maxLength = "500", placeholder = "Max Char limit 500" })

                        </div>

                        <div class="reps-in-box">
                            <div class="rmv-pd col-md-4 col-sm-12 col-xs-12" id="reps-level">
                                <label class="lbl-txt col-md-5  col-sm-12 col-xs-12 reps-wdth-box"># Reps</label>
                                @Html.TextBoxFor(m => m.Reps1, null, new { @class = "input in-textbox col-md-6 col-sm-12 col-xs-12 cc-input-box", maxLength = "3" })
                            </div>
                            <div class="rmv-pd col-md-4 col-sm-12 col-xs-12">
                                <label class="lbl-txt col-md-5 col-sm-12 col-xs-12 reps-wdth-box">Weight For Men (lbs)</label>
                                @Html.TextBoxFor(m => m.WeightForMan1, null, new { @class = "input in-textbox col-md-6 col-sm-12 col-xs-12", maxLength = "3" })
                            </div>
                            <div class="rmv-pd col-md-4 col-sm-12 col-xs-12">
                                <label class="lbl-txt col-md-6 col-sm-12 col-xs-12">Weight For Women (lbs)</label>
                                @Html.TextBoxFor(m => m.WeightForWoman1, null, new { @class = "input in-textbox col-md-6 col-sm-12 col-xs-12", maxLength = "3" })
                            </div>
                            <div class="clr-both"></div>
                        </div>

                    </div>
                    <!-- end step-des -->
                </div>
                <div class="step" id="FreeFormChallengeExeciseSection">
                    <h5>Step 4 - Choose Exercise(s):</h5>
                    <!-- start step-des -->
                    <div class="step-des">
                        <br />
                        <div>
                            <div class="rmv-pd col-md-4 col-sm-12 col-xs-12 exer-sec">
                                <label class="pull-left" style="width: auto; margin-right: 5px; padding: 5px 1%;">Equipments:</label>
                                @*<select id="chkFreeFormSearchEquipment" multiple="multiple" title="Equipment" style="width:180px;"></select>*@
                                @Html.DropDownListFor(m => m.SelectedEquipment1, new SelectList(lstEquipment, "EquipmentId", "Equipment"), "--Choose Equipments--", new { id = "FFdrpdownEquipments1", @class = "select" })
                            </div>
                            <div class="rmv-pd col-md-4 col-sm-12 col-xs-12 exer-sec">
                                <label class="pull-left" style="width: auto; margin-right: 5px; padding: 5px 1%;">Training Zones:</label>
                                @*<select id="chkFreeFormTrainingZone" multiple="multiple" title="Training Zone" style="width:180px;"></select>*@
                                @Html.DropDownListFor(m => m.SelectedTrainingZone1, new SelectList(lstBodyPart, "PartId", "PartName"), "--Choose Training Zones--", new { id = "FFdrpdownTrainingZones1", @class = "select" })
                            </div>
                            <div class="rmv-pd col-md-4 col-sm-12 col-xs-12 exer-sec">
                                <label class="pull-left" style="width: auto; margin-right: 5px; padding: 5px 1%;">Exercise Types:</label>
                                @*<select id="chkFreeFormSearchExerciseType" multiple="multiple" title="Exercise Type" style="width:180px;"></select>*@
                                @Html.DropDownListFor(m => m.SelectedExeciseType1, new SelectList(lstExerciseType, "ExerciseTypeId", "ExerciseName"), "--Choose Exercise Types--", new { id = "FFdrpdownExerciseTypes1", @class = "select" })
                            </div>
                        </div>
                        <div class="row-colum add-step">
                            <label>Name of Exercise 1:</label>
                            @Html.TextBoxFor(m => m.FFExeName1, null, new { @class = "freeforminput FreeFormExerciseVideos col-md-10 col-sm-10 col-xs-10" })
                            <div class="row-colum col-md-12 col-sm-12 col-xs-12">
                                <label>&nbsp;</label>
                                <span id="FFExeVideoLink1">
                                    <a id="FFExeVideoLinkUrl1" href=@Html.DisplayFor(m => m.FFExeVideoUrl1) target="_blank">@Html.DisplayFor(m => m.FFExeVideoLink1)</a>
                                </span>
                                <span id="lblExe1" class="error-msg secondary-err-msg"></span>
                                @Html.ValidationMessageFor(m => m.FFExeName1, "", new { @class = "error-msg" })
                            </div>
                            <div class="row-colum col-md-12 col-sm-12 col-xs-12">
                                <label><span class="active-new-chckbox pull-left">Alternate Name:</span> @Html.CheckBoxFor(m => m.IsFFAExeName1, new { @class = "IsChangedExeciseName checkbox-btn" })</label>
                                @Html.TextBoxFor(m => m.FFAExeName1, null, new { @class = "freeforminput col-md-10 col-sm-10 col-xs-10" })
                            </div>
                            <div class="row-colum col-md-12 col-sm-12 col-xs-12">
                                <label><span class="active-new-chckbox pull-left">Set As First Exercise:</span>@Html.CheckBoxFor(m => m.IsSetFirstExecise, new { id = "IsSetFirstExecise1", @class = "checkbox-btn" })</label>

                            </div>
                        </div>
                        <div class="row-colum">
                            <div id="execeMainsetId1" class="Main-set main-bg-set">
                                <div id=1>
                                    <div class="set-heading">
                                        <span id="exesetTittle1"> Set 1</span>
                                    </div><label>How Many Reps:</label>
                                    <input class="freeforminput FreeFormExerciseVideos1 col-md-10 col-sm-10 col-xs-10 ui-autocomplete-input ui-corner-all" id="ExecSetRep1" name="ExecSetRep1" type="text" value="" autocomplete="off">
                                    <div class="or-section"><span>OR</span></div><label>How Much Time:</label>
                                    <label style="width:47px;margin-right:2px;" class="lbl-txt">Hour(s)</label>
                                    <input class="input " data-val="true" data-val-range="Please enter valid Hour(s)." data-val-range-max="24" data-val-range-min="0" id="SetTimeHours1" maxlength="2" name="SetTimeHours1" style="width:60px;padding:5px;margin-right:5px;text-align:center;height:32px;" type="text" value="00">
                                    <label style="width:55px;margin-right:5px;" class="lbl-txt">Minute(s)</label>
                                    <input class="input" data-val="true" data-val-range="Please enter valid Minute(s)." data-val-range-max="60" data-val-range-min="0" id="SetTimeMinute1" maxlength="2" name="SetTimeMinute1" style="width:60px;padding:5px;margin-right:5px;text-align:center;height:32px;" type="text" value="00">
                                    <label style="width:58px;margin-right:5px;" class="lbl-txt">Second(s)</label>
                                    <input class="input " data-val="true" data-val-range="Please enter valid Second(s)." data-val-range-max="60" data-val-range-min="0" id="SetTimeSecond1" maxlength="2" name="SetTimeSecond1" style="width:60px;padding:5px;margin-right:5px;text-align:center;height:32px;" type="text" value="00">
                                    <label style="width:30px;margin-right:5px;" class="lbl-txt">HS(s)</label>
                                    <input class="input" data-val="true" data-val-range="Please enter valid HS(s)." data-val-range-max="99" data-val-range-min="0" id="SetTimeHS1" maxlength="2" name="SetTimeHS1" style="width:60px;padding:5px;margin-right:5px;text-align:center;height:32px;height:32px;" type="text" value="00">
                                    <span class="active-new-chckbox pull-left" style="line-height:31px;">Auto Count Down:</span>

                                    <div class="gender-option-pd">
                                        <input id="IsSetAutoCountDown1" name="IsSetAutoCountDown1" type="checkbox" checked="checked" class="IsChangedExeciseName checkbox-autcountbtn" />
                                    </div>
                                    <div class="clr-both">
                                    </div>
                                    <label>Description:</label><textarea class="freeformtextarea col-md-10 col-sm-10 col-xs-9" cols="20" id="ExecSetDescription1" maxlength="500" name="ExecSetDescription1" placeholder="Max Char limit 500" rows="2"></textarea>
                                    <div class="clr-both">
                                    </div>
                                    <label>How Much Rest Time:</label><label style="width:47px;margin-right:2px;" class="lbl-txt">Hour(s)</label>
                                    <input class="input" data-val="true" data-val-range="Please enter valid Hour(s)." data-val-range-max="24" data-val-range-min="0" id="RestTimeHours1" maxlength="2" name="RestTimeHours1" style="width:60px;padding:5px;margin-right:5px;text-align:center;height:32px;" type="text" value="00">
                                    <label style="width:55px;margin-right:5px;" class="lbl-txt">Minute(s)</label>
                                    <input class="input " data-val="true" data-val-range="Please enter valid Minute(s)." data-val-range-max="60" data-val-range-min="0" id="RestTimeMinute1" maxlength="2" name="RestTimeMinute1" style="width:60px;padding:5px;margin-right:5px;text-align:center;height:32px;" type="text" value="00">
                                    <label style="width:58px;margin-right:5px;" class="lbl-txt">Second(s)</label>
                                    <input class="input " data-val="true" data-val-range="Please enter valid Second(s)." data-val-range-max="60" data-val-range-min="0" id="RestTimeSecond1" maxlength="2" name="RestTimeSecond1" style="width:60px;padding:5px;margin-right:5px;text-align:center;height:32px;" type="text" value="00">
                                    <label style="width:30px;margin-right:5px;" class="lbl-txt">HS(s)</label>
                                    <input class="input" data-val="true" data-val-range="Please enter valid HS(s)." data-val-range-max="99" data-val-range-min="0" id="RestTimeHS1" maxlength="2" name="RestTimeHS1" style="width:60px;padding:5px;margin-right:5px;text-align:center;height:32px;" type="text" value="00">
                                    <input type="hidden" id="IsNewAddedSet1" value="1">
                                    <div class="clr-both"></div>
                                </div>
                            </div>
                            <div class="add-set">
                                <button id="btnAddExeciseSet1" class="add_set_button marginBot10">Add Set</button>
                            </div>
                            <div class="btn-add-new"><button id="InsertExecise1" class="add_field_button add-exercise">Add Exercise</button></div>
                        </div>
                        <div class="clr-both chose-ex-parts"></div>
                        <input type="hidden" id="ExerciseSetCount1" value="1">
                        <input type="hidden" id="IsNewAddedExercise1" value="@(Model.IsNewAddedExercise1)">
                        <div id="freeformtoggalediv">

                        </div>

                        <!-- end step-des -->
                    </div>
                </div>

                <!-- end step -->
                <!-- end step -->
                <!-- start step -->
                <div class="step" id="AdminChallengeVaribaleSec">
                    <h5>Step 3 - Choose Variable Value (based on challenge type selected above):</h5>
                    <!-- start step-des -->
                    <div class="step-des">
                        <div class="row-colum">

                            <div id="VariblesMinute-Section" style="display:none;">
                                <div class="row remove-data-pd">
                                    <div><label id="lblValue">Type 1 - # of Reps:</label> </div>
                                    <div class="col-md-6  rmv-pd">

                                        <div class="rmv-pd">
                                            <label style="width:47px;margin-right:2px;" class="lbl-txt">Hour(s)</label>
                                            @Html.TextBoxFor(m => m.VariableHours, null, new { @class = "input ", maxLength = "2", style = "width:30px;padding:5px;margin-right:5px;" })
                                            <label style="width:55px;margin-right:5px;" class="lbl-txt">Minute(s)</label>
                                            @Html.TextBoxFor(m => m.VariableMinute, null, new { @class = "input ", maxLength = "2", style = "width:30px;padding:5px;margin-right:5px;" })
                                            <label style="width:58px;margin-right:5px;" class="lbl-txt">Second(s)</label>
                                            @Html.TextBoxFor(m => m.VariableSecond, null, new { @class = "input ", maxLength = "2", style = "width:30px;padding:5px;margin-right:5px;" })
                                            <label style="width:30px;margin-right:5px;" class="lbl-txt">HS(s)</label>
                                            @Html.TextBoxFor(m => m.VariableMS, null, new { @class = "input ", maxLength = "2", style = "width:30px;padding:5px;margin-right:5px;" })
                                        </div>
                                        <div class="clr-both"></div>
                                        <div class="rmv-pd">
                                            @Html.ValidationMessageFor(m => m.VariableValue, "", new { @class = "error-msg", style = "padding: 0px 0 0 0px;float: left;margin-right:5px;" })
                                            @Html.ValidationMessageFor(m => m.VariableHours, "", new { @class = "field-validation-error error-msg", style = "padding: 0px 0 0 0px;float: left;margin-right:5px;" })
                                            @Html.ValidationMessageFor(m => m.VariableMinute, "", new { @class = "field-validation-error error-msg", style = "padding: 0px 0 0 0px;float: left;margin-right:5px;" })
                                            @Html.ValidationMessageFor(m => m.VariableSecond, "", new { @class = "field-validation-error error-msg", style = "padding: 0px 0 0 0px;float: left;margin-right:5px;" })
                                            @Html.ValidationMessageFor(m => m.VariableMS, "", new { @class = "field-validation-error error-msg", style = "padding: 0px 0 0 0px;float: left;margin-right:5px;" })
                                        </div>
                                    </div>

                                </div>
                                <div class="clr-both"></div>
                            </div>

                            <div class="row" id="otheVariableValue">
                                <div class="col-md-2 col-sm-2 col-xs-2  rmv-pd"><label id="lblotherValue">Type 1 - # of Reps:</label> </div>
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.VariableValue, null, new { @class = "input", maxLength = "5", autocomplete = "off" })
                                    <span id="maxLimitValidation" class="error-msg"></span>

                                </div>
                                @Html.ValidationMessageFor(m => m.VariableValue, "", new { @class = "error-msg" })
                            </div>
                        </div>

                    </div>
                    <!-- end step-des -->
                </div>
                <!-- end step -->
                <!-- end step -->
                <!-- start step -->
                <div class="step" id="ChallengeGlobalResultFilter">
                    <h5 id="trainerResult">Step 4 - Enter Your Challenge Results:</h5>
                    <!-- start step-des -->
                    <div class="step-des">
                        <div class="row-colum" id="inputDiv">
                            <div id="ResultTime" style="display:none;">
                                <div class="row remove-data-pd">

                                    <div class="col-md-10  rmv-pd">
                                        <label style="width:47px;margin-right:2px;" class="lbl-txt">Hour(s)</label>
                                        @Html.TextBoxFor(m => m.ResultVariableHours, null, new { @class = "input ", maxLength = "2", style = "width:30px;padding:5px;margin-right:5px;" })
                                        <label style="width:57px;margin-right:2px;" class="lbl-txt">Minute(s)</label>
                                        @Html.TextBoxFor(m => m.ResultVariableMinute, null, new { @class = "input", maxLength = "2", style = "width:30px;padding:5px;margin-right:5px;" })
                                        <label style="width:59px;margin-right:2px;" class="lbl-txt">Second(s)</label>
                                        @Html.TextBoxFor(m => m.ResultVariableSecond, null, new { @class = "input", maxLength = "2", style = "width:30px;padding:5px;margin-right:5px;" })
                                        <label style="width:30px;margin-right:2px;" class="lbl-txt">HS(s)</label>
                                        @Html.TextBoxFor(m => m.ResultVariableMS, null, new { @class = "input", maxLength = "2", style = "width:30px;padding:5px;margin-right:5px;" })
                                        <div class="rmv-pd">
                                            @Html.ValidationMessageFor(m => m.ResultVariableHours, "", new { @class = "field-validation-error error-msg", style = "padding: 0px 0 0 0px;float: left;margin-right:5px;" })
                                            @Html.ValidationMessageFor(m => m.ResultVariableMinute, "", new { @class = "field-validation-error error-msg", style = "padding: 0px 0 0 0px;float: left;margin-right:5px;" })
                                            @Html.ValidationMessageFor(m => m.ResultVariableSecond, "", new { @class = "field-validation-error error-msg", style = "padding: 0px 0 0 0px;float: left;margin-right:5px;" })
                                            @Html.ValidationMessageFor(m => m.ResultVariableMS, "", new { @class = "field-validation-error error-msg", style = "padding: 0px 0 0 0px;float: left;margin-right:5px;" })
                                        </div>
                                    </div>

                                </div>
                                <div class="clr-both"></div>
                            </div>
                            @Html.TextBoxFor(m => m.ResultWeightorDestance, null, new { @class = "input" })
                            <label id="lblResultWeightOrDistance" class="error-msg none error-btm"></label>
                            @Html.TextBoxFor(m => m.ResultRepsRound, null, new { @class = "input", maxLength = "3" })
                            <div class="clearfix"></div>
                            @Html.DropDownListFor(m => m.ResultFrection, new SelectList(lstFractionList, "Value", "Text", ViewBag.SelectedFraction), "--Choose Fraction--", new { @class = "select margin-top" })
                        </div>
                    </div>
                    <!-- end step-des -->
                </div>
                <!-- end step -->
                <!-- start step -->
                <div class="step" id="TrainerCreatedChallengeName">
                    <h5 id="TrainerStepChallengeName">Step 5 - Enter Challenge Name:</h5>
                    <!-- start step-des -->
                    <div class="step-des">
                        <div class="row-colum">
                            @Html.TextBoxFor(m => m.ChallengeName, null, new { @class = "input", maxLength = "200" })

                            <div class="col-md-6 col-lg-6 col-xs-6 remove-margin-left">
                                @Html.ValidationMessageFor(m => m.ChallengeName, "", new { id = "spnChallengeNameerror-msg", @class = "error-msg none error-btm" })
                                @Html.HiddenFor(model => model.CheckChallengeName)
                                <div class="clr-both"></div><span id="resultChallengeName" />
                            </div>
                        </div>
                    </div>

                </div>
                <!-- end step-des -->
                <!-- start step -->
                <div class="clr-both"></div>
                <div class="bottom-button">
                    <input name="" type="button" id="btnButtomdraft" value="Save to Draft" class="submit" />
                    <input name="" type="button" id="btnButtomsubmit" value="Submit to Fitcom" class="submit" />
                    @Html.ActionLink("Cancel", "TrainerChallenges", "Reporting", new { }, new { @class = "submit" })
                </div>
            </div>
            <!-- end challenge-content -->
        </div>
        <!-- end create-challenge -->
        <div class="clearfix"></div>
    </div>
}
<script src="~/Scripts/BusinessLogic/TrainerCreatedChallengeBL.js"></script>
